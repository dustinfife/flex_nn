# Load required libraries
library(flexplot)
library(keras)
library(tensorflow)

# Basic usage with default architecture
data(mtcars)
model1 = nn(mpg ~ hp + wt + cyl, data = mtcars, epochs = 100)

mtcars$mpg
# Use with flexplot's compare.fits

lm_model = lm(mpg ~ hp + wt + cyl, data = mtcars)
k = compare.fits(mpg ~ hp | wt, data = mtcars, lm_model, model1$model, return.preds=T)
tail(k)
terms_result = get_terms(model1$model)
print(terms_result)


head(avengers)
require(party)
lmmod = cforest(ptsd~agility + speed + strength + damage.resistance, data=avengers)
model1 = nn(ptsd~agility + speed + strength + damage.resistance, data=avengers, epochs = 100)
compare.fits(ptsd~damage.resistance | agility, data=avengers, lmmod, model1$model)


# What's the structure of your keras model?
str(model1$model)
class(model1$model)

# Try accessing various attributes
names(model1$model)

# Test your generate_predictions method directly
test_pred_values = data.frame(hp = c(100, 150), wt = c(2.5, 3.0), cyl = c(4, 6))

# This should work without error:
result = generate_predictions(model1$model, re = FALSE, test_pred_values, "response", FALSE)
print(result)